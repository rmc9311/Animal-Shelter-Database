from pymongo import MongoClient

from bson.objectid import ObjectId



class AnimalShelter(object):

    """ CRUD operations for Animal collection in MongoDB """



    def __init__(self, username, password):
        

        # Initializing the MongoClient. This helps to 
        
        # access the MongoDB databases and collections. 

        self.client = MongoClient('mongodb://%s:%s@localhost:37387/?authMechanism=DEFAULT&authSource=AAC'%(username,password))

        

        self.database = self.client['AAC']



    # creates new animal for database and inserts it into the database

    def create(self, data):

        if data is not None:

            self.database.animals.insert(data)  # data should be dictionary   
            return True

        else:

            raise Exception("Nothing to save, because data parameter is empty")

        
    #searches database to find all that match input data
    def read(self, data):

            search = self.database.animals.find(data, {'_id':False})
            return search
  
    #searches database to find one that match input data
    def read_one(self, data):
        return self.database.animals.find_one(data)
    
    #updates data in database
    def update_one(self, animal_id, new_data):
        error_message = "Information could not be updated"
        if self.database.animals.update(animal_id, new_data):
            return self.database.animals.find_one(animal_id)
        else:
            return error_message
       
        
    
    #Delete data in database
    def delete_one(self, data):
        error_message = "Information could not be deleted"
        if self.database.animals.remove(data) == True:
            return self.database.animals.find_one(data)
        else:
            return error_message
